#!/bin/bash
#PBS -A SCSG0001
#PBS -q main
#PBS -j oe
#PBS -k oed
#PBS -l walltime=00:05:00
#PBS -l select=10:ncpus=128:mpiprocs=128:mem=200G

### Set temp to scratch
[[ "x${TMPDIR}" == "x" ]] && export TMPDIR=${SCRATCH}/tmp && mkdir -p ${TMPDIR}

nodeslist=( $(cat ${PBS_NODEFILE} | sort | uniq | cut -d'.' -f1) )
nnodes=$(cat ${PBS_NODEFILE} | sort | uniq | wc -l)
nranks=$(cat ${PBS_NODEFILE} | sort | wc -l)
nranks_per_node=$((${nranks} / ${nnodes}))

exec="mpi_init_finalize.exe.${PBS_JOBID}"
mpicxx -o ${exec} /glade/u/home/benkirk/mpi_init_finalize.C || exit 1


export PALS_FANOUT=32
export MPICH_ENV_DISPLAY=1
export MPICH_OFI_VERBOSE=1
export MPICH_MEMORY_REPORT=1
export MPI_VERBOSE=1

maxtries=4
for try in $(seq 1 ${maxtries}); do
    set -x
    mpiexec -n ${nranks} -ppn ${nranks_per_node} --verbose --cpu-bind core \
            /bin/hostname > /dev/null \
        && echo "LAUNCH SUCCESS (/bin/hostname, attempt ${try} of ${maxtries})" && break \
        || echo "LAUNCH FAILURE (/bin/hostname, attempt ${try} of ${maxtries})"
    set +x
done

for try in $(seq 1 ${maxtries}); do
    set -x
    mpiexec -n ${nranks} -ppn ${nranks_per_node} --verbose --cpu-bind core \
            ./${exec} | tee -a startup-nr-${nranks}:nn-${nnodes}:ppn-${nranks_per_node}.${PBS_JOBID}.log
    [[ ${PIPESTATUS[0]} == 0 ]] && break
    set +x
    echo "LAUNCH FAILURE (${exec}, attempt ${try} of ${maxtries})"
done

rm -f ${exec}

echo "# DONE at $(date)"
