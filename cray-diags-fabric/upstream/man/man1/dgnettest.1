.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "DGNETTEST" "1" "" "Dgnettest User Manual" "Version 1.0"
.hy
.SH NAME
.PP
dgnettest - network fabric diagnostic and support scripts
.SH SYNOPSIS
.PP
dgnettest [-haDeindSv] [-c \f[I]class\f[R]] [-m min[:max[:step]]] [-p
\f[I]ppn\f[R]] [-N \f[I]nic_mapping\f[R]] [-r \f[I]reps\f[R] | -r
\f[I]auto\f[R] ] [-C \f[I]counter\f[R]] [-s \f[I]set-size\f[R]] [-t
\f[I]run-time\f[R]] [-T \f[I]threshold\f[R]] [\f[I]latency\f[R] |
\f[I]loopback\f[R] | \f[I]all2all\f[R] | \f[I]bisect\f[R]]
.PP
dgnettest_run.sh [-hdbv][-n \f[I]nodelist\f[R]][-s
\f[I]set-size\f[R]][-t \f[I]time\f[R]][-T \f[I]threshold\f[R]][-m
\f[I]size\f[R]][-i \f[I]mpi-mode\f[R]][-p \f[I]PPN\f[R]][-r
\f[I]repetitions\f[R]] [-R \f[I]counter\f[R]] [\f[I]latency\f[R] |
\f[I]loopback\f[R] | \f[I]all2all\f[R] | \f[I]bisect\f[R]]
.SH DESCRIPTION
.PP
The Slingshot network diagnostic, dgnettest, is comprised of four
different tests as follows:
.TP
Loopback Bandwidth Test
The loopback test loops data from the compute node through the connected
Rosetta Switch port back to the compute node.
.TP
Latency Test
The latency test is performed over the NICs attached to each switch.
The default is to run latency tests within each board, which should all
give the same answer.
The latency test measures MPI point-to-point latency over nodes
connected to the same switch.
It reports the distribution of latency values in bins corresponding to
zero, one, and two switch-to-switch hops.
.TP
Fabric Bisection Bandwidth Test
A bisection bandwidth test divides the nodes in two and measure
bandwidth between the halves.
In general the user selects the worst case cut, but in a dragonfly
network (or fat-tree) of reasonable size, it is all pretty much the
same.
The bisection bandwidth is usually limited by the bandwidth of the
global links.
.TP
Fabric All to All Test
The objective of the fabric all-to-all diagnostic is to measures
performance on all-to-all communication for sets of nodes corresponding
to the physical structure of a Slingshot system: blades, chassis, groups
and the whole system.
The test is designed to run on as many nodes as are available, reporting
variation in performance over sets of nodes of a given size.
For example, to run 512 instances of a blade level test on 2048 nodes
and report variation between them.
.PP
The fabric all-to-all diagnostic generates a high network load.
In particular it stresses the PCIe interfaces that connect each node to
Rosetta.
Poor performance on this test correlates well to high rates of PCIe
errors (logged on the SMS).
It is intended that the test be executed on all nodes for a period of
ten minutes.
This is sufficient to detect nodes with rates of PCIe errors that impact
application performance.
.PP
The diagnostic uses MPI_Alltoall.
As such it is representative of a real application.
The diagnostic does not require dedicated access to the whole system.
It can be run on a subset of nodes allocated by the batch system.
The impact on performance of other applications is low if all nodes in
an electrical group are allocated to a test.
.PP
While you can run dgnettest as a standalone test for troubleshooting
specific issues, the test will need to be run multiple times, going over
each test to get a full picture of the system, and verify it is working
as expected.
To help with executing dgnettest in a number of configurations to help
with diagnosing issues with the network fabric, the script
dgnettest_run.sh was developed.
By default, dgnettest_run will run with suggested defaults over all NICs
on all available nodes.
Each test will be done over a single NIC at a time, and currently SLURM
is required as the workload manager for testing.
The script and binary are intended for use by administrator and
therefore requires root privileges to run.
The script, dgnettest_run.sh, can be modified by the site based on
customer requirements.
.PP
##Tests
.PP
Currently, dgnettest_run.sh can run 4 tests: loopback, latency, switch,
and group.
By default, only the loopback, switch, and group tests are run.
The script can be directed to run a custom list of tests by passing
their names as command line arguments.
The latency test can be run by including \[lq]latency\[rq] in this test
list.
When a custom test list is used, a set size must be specified using the
-s option.
.IP \[bu] 2
The loopback test measures MPI bandwidth with each NIC set to
communicate to the switch and then back to itself with local memory
sharing turned off.
It reports back the bandwidth performance of each node to help with
identifying nodes with values outside the threshold for review.
.IP \[bu] 2
The latency test measures MPI point-to-point latency over nodes
connected to the same switch.
It reports the distribution of latency values in bins corresponding to
zero, one, and two switch-to-switch hops.
.IP \[bu] 2
The switch and group tests are a set of all2all and bisectional tests
that are run with the -S option of dgnettest set to give statistics and
the set size, -s, adjusted.
The switch test uses the -s option with a set-size of 16 to run the test
on sets of nodes connected to a given switch.
A group test uses the -s option with a set size of 512 which should
select all the nodes in a cabinet, although this will vary between
systems.
.SH OPTIONS
.SS dgnettest
.TP
-a
Runs dgnettest with all sets (-s) the same size for the run.
.TP
-c \f[I]class\f[R]
Set the network class of the system.
Supported classes are 0-4, default is 2.
.TP
-C \f[I]counter\f[R]
.IP
.nf
\f[C]
Specifies a path to a counter that dgnettest will sample during the running of the test. Only one counter can be provided.
\f[R]
.fi
.TP
-d
Print debug info
.TP
-D
Display additional Network information.
.TP
-e
Have dgnettest set all sets (-s) to an even number of nodes.
The program will fail if this can\[cq]t be done.
.TP
-h
Prints the help message and then exits.
.TP
-i
Ignore MAC/hostname errors and network class size restrictions.
Typically, these failures are a sign of improper network configuration
or cabling.
If it\[cq]s still desired to run over a known bad network, you can use
the -i to continue running past these errors.
.TP
-m min[:max[:step]]
Specify the size minimum, maximum, and step size of network messages
used in bytes.
If the value is larger than supported memory on the node, dgnettest will
lower the message size to the largest accommodable size.
Typical tests will start with the selected smallest message size and
then increase the size up to the maximum during the run of each test.
.TP
-n
Print nodelists for each set, -nn to exit after printing report
.TP
-p \f[I]ppn\f[R]
Set PPN, Default 1
.TP
-N \f[I]nic_mapping\f[R]
Set the NIC mapping for this run.
If a single NIC is being used, enter the NIC number to use.
If using multiple NICs, the NICs to Ranks mapping is needed.
No Default; must be set to run.
See the \f[I]EXAMPLES\f[R] section for more information on setting a
custom mapping.
.TP
-r \f[I]reps\f[R] | -r \f[I]auto\f[R]
Set repetitions, or you can enter \[lq]auto\[rq] which is enough for 15
seconds.
The default is 100 reps.
.TP
-s \f[I]set-size\f[R]
Sets the number of nodes per set.
The default is 512 nodes per set.
.TP
-S
Print out a statistical table of data over the run.
The default is for this option to be turned off.
.TP
-t \f[I]run-time\f[R]
Set runtime for each test in seconds; the default is 30 seconds.
.TP
-T \f[I]threshold\f[R]
Set the low bandwidth threshold.
Value should be between 0 and 1; the default is 0.9.
.TP
-v
Sets the verbosity level of the diagnostic.
There are currently multiple levels of verbosity that can be enabled by
including -v additional times; up to -vvv.
.SS dgnettest_run.sh
.TP
-b
Set slurm to broadcast out dgnettest to the nodes.
The default for dgnettest is not broadcasting files out, but this is
needed if running from the UAN as the binary isn\[cq]t present on the
compute nodes.
.TP
-c \f[I]class\f[R]
Set Network class type based on the system.
Typical single cabinet clusters will be classified as class 0, 2 cabinet
clusters will be classified as class 1, and anything larger than 2
cabinets would be classified as a class 2 or higher.
Currently anything higher than a class 2 would run as a class 2 in
dgnettest.
(default is 2)
.TP
-C
Run the test over all available NICs concurrently with the default PPN
setting.
If you wanted to change the value of PPN for a run with -C, you will
need to provide a NICs to Ranks mapping.
See the \f[I]EXAMPLES\f[R] section for more information on setting a
custom mapping.
.TP
-d
Turns on debug output for help with development.
.TP
-h
Prints the help message and then exits.
.TP
-i
Ignores minor warnings for issues that may be present in the hostfile,
with the MAC address, or with the selected network class type.
Typically, dgnettest stops on these issues due possible network
configuration issues that should be checked.
.TP
-l \f[I]latency\f[R]
Set the high CV threshold for the latency test.
Value should be between 0 and 1, (default 0.05(5%))
.TP
-m \f[I]size\f[R]
Specify the size of network messages used in bytes.
If the value is larger than supported memory on the node, dgnettest will
lower the message size to the largest accommodable size.
The default is 131072 bytes.
.TP
-M \f[I]mpi_mode\f[R]
Set mpi mode for the srun commands given during this test run.
(default none)
.TP
-n \f[I]nodelist\f[R]
Select nodes to use for this run.
The default will try to grab all idle nodes for the run.
.TP
-N \f[I]NIC\f[R]
Run over a single, user selected NIC in the system.
If no additional NICs are present in the system, dgnettest_run will
default to running on NIC 0.
.TP
-p \f[I]PPN\f[R]
Set the number of processes per node.
(default is selected by NUMA)
.TP
-P \f[I]partition\f[R]
Set the slurm partition to use while running (default is none/slurm
default)
.TP
-r \f[I]reps\f[R]
Set the number of repetitions to run each test.
If this is set to \[lq]auto\[rq] then dgnettest will calculate a number
of reps to fit the runtime set with -t.
(default auto)
.TP
-R \f[I]counter\f[R]
.IP
.nf
\f[C]
Passes along a counter path to dgnettest for it to sample while running the test.
\f[R]
.fi
.TP
-s \f[I]set-size\f[R]
Run tests over sets of nodes of a given size.
The default is to let the script adjust this value based on the test
that is being run.
If set manually, you can either provide a list of tests to run or
dgnettest will run through its default list of loopback, bisectional,
and all-to-all.
.TP
-S
Displays additional statistical information for loopback, latency, and
user selected tests.
The switch and group tests will have the stats option always enabled to
help with interpreting the data from theses tests.
Default is not to display the additional statistical information.
.TP
-t \f[I]time\f[R]
Specify the runtime for each network test in seconds.
The default is for 30 seconds.
.TP
-T \f[I]threshold\f[R]
Set the bandwidth threshold that all values should try to fall between.
Any values outside of this range are flagged as too high or too low.
The value should be between 0 and 1, (default is 0.9)
.TP
-v
Sets the verbosity level of the diagnostic.
There are currently multiple levels of verbosity that can be enabled by
including -v additional times; up to -vvv.
.SH EXIT STATUS
.PP
The script, dgnettest_run.sh, starts by gathering data on the nodes
selected for the run, generating sets of nodes with matching core,
socket, NIC, and NUMA Node counts.
These sets are then run through a suite of tests, and at the end of each
test dgnettest will give a \[lq]dgnettest has FAILED\[rq] or
\[lq]dgnettest has PASSED\[rq].
The script will give a pass if it can run through all tests over all
sets, only failing when there is an error.
The idea being that while a test for dgnettest may fail, sometimes the
script is run as part of a longer set of tests, so it will try to run
all tests and allow the user to view the results afterwards to identify
issues.
Currently, the dgnettest tests will give you a FAILED output if the
results give a low warning for any part of the test.
There can be other warnings or errors that come up during the run that
may not result in a FAILED output.
.IP \[bu] 2
In the loopback test, if you get a node that performs outside of the set
threshold, a warning will be displayed.
There can be warnings for both too high and too low results.
This is due to the possibility of extreme outliers causing other nodes
to be false positives or be missed.
As a suggestion, start looking at the worst offenders and retest once
fixed or without these nodes to check how the results change.
You can also adjust the threshold value used (\f[I]-t\f[R]) by the test
to tune which nodes are flagged.
Currently, the test will report a failure only on \[lq]result is
low\[rq]; \[lq]result is high\[rq] is treated as a warning and not
flagged as a failure.
.RS 2
.IP
.nf
\f[C]
  Running loopback tests on NIC 1 over : nid[000022-000028]
  Using NIC 1
  nprocs=56 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  loopback  autoreps time 0.003501 reps 4284
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072     4044     6518     8156     1782     27.3%                 
  loopback     2   131072     4235     7033     8771     1641     23.3%                 
  loopback     3   131072     6653     7910     9145      998     12.6%                 
  loopback     4   131072     4850     6785     9087     1796     26.5%                 
  Final loopback bandwidth stats
  loopback     4   131072     4235     7243     9145     1523     21.0%                 
  Per node bandwidth stats
  nid000022    4   131072     7900     8570     9039      596      7.0%   result is high
  nid000023    4   131072     6223     6494     6823      304      4.7%    result is low
  nid000024    4   131072     4235     6201     9145     2597     41.9%    result is low
  nid000025    4   131072     6617     7914     8854     1161     14.7%                 
  nid000026    4   131072     5356     6984     8206     1468     21.0%                 
  nid000027    4   131072     6653     8150     9087     1309     16.1%   result is high
  nid000028    4   131072     4850     6385     8045     1601     25.1%    result is low
  dgnettest has FAILED
\f[R]
.fi
.RE
.IP \[bu] 2
In the latency test the CV value is checked to see if it\[cq]s below the
latency threshold, which is set to 5.0% by default.
If the CV value is outside this range, you will get a \[lq]CV is
high\[rq] warning.
You will also notice that the histogram shows a lot of groups for the
latency results.
This is a sign of network issues where you should try looking at error
counters for the NIC, double check cabling, and verify the AMAs on the
system.
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[001000-001009,001011-001081,001211-001219,001221-001279,001412-001499,001501-001511] -s 16 latency
  Running tests over : nid[001000-001009,001011-001081,001211-001219,001221-001279,001412-001499,001501-001511]
  nprocs=1984 sets=20 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test       Count    Min   Mean    Max    Dev     CV
  latency     1596   1.81   2.37   2.93   0.33   13.9%     CV is high
  latency histogram
  latency   1.75 - 1.80     0
  latency   1.80 - 1.85     66
  latency   1.85 - 1.90     110
  latency   1.90 - 1.95     27
  latency   1.95 - 2.00     63
  latency   2.00 - 2.05     123
  latency   2.05 - 2.10     24
  latency   2.10 - 2.15     70
  latency   2.15 - 2.20     53
  latency   2.20 - 2.25     59
  latency   2.25 - 2.30     116
  latency   2.30 - 2.35     93
  latency   2.35 - 2.40     6
  latency   2.40 - 2.45     116
  latency   2.45 - 2.50     33
  latency   > 2.50          637
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
Typically, the switch and group test\[cq]s output will show similar
issues if there are any.
In this output we can see that the group test runs slowly in group 1
(nid[000033-000064]) and that the switch test runs slowly for one switch
in each of groups 0 and 1, tests on just these nodes show poor
performance.
.RS 2
.IP
.nf
\f[C]
  Running switch tests on NIC 1 over : nid[000004-000028,000033-000064]
  Using NIC 1
  nprocs=456 sets=4 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                 
  all2all      1   131072     8569    10206    11277     1162     11.4%                
  all2all      2   131072     9066    10101    11372     1184     11.7%                
  all2all      3   131072     8771     9838    11240     1165     11.8%                
  all2all      4   131072    10185    10632    11412      541      5.1%                
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                 
  bisect       1   131072     5881     6773     9059     1527     22.5%                
  bisect       2   131072     5774     6555     8385     1232     18.8%                
  bisect       3   131072     6018     6657     8410     1171     17.6%                
  bisect       4   131072     5724     6465     8438     1318     20.4%                
  bisect       5   131072     5527     6451     8407     1323     20.5%                
  bisect    test bandwidth low   5527 MB/s for set 1 location 000.03.00 12 nodes: nid[000005-000006,000009-000010,000013-000014,000017-000018,000021-000022,000025-000026]
  bisect    test bandwidth low   5788 MB/s for set 3 location 001.02.00 16 nodes: nid[000035-000036,000039-000040,000043-000044,000047-000048,000051-000052,000055-000056,000059-000060,000063-000064]
  dgnettest has FAILED
  srun: error: nid000004: task 0: Exited with exit code 1 

  Running group tests on NIC 1 over : nid[000004-000028,000033-000064]
  Using NIC 1
  nprocs=456 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                 
  all2all      1   131072     6357     6637     6918      397      6.0%                
  all2all      2   131072     6291     7326     8360     1463     20.0%                
  all2all   test bandwidth low   6291 MB/s for set 1 location 001.00.00 32 nodes: nid[000033-000064]
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                 
  bisect       1   131072     6199     7922     9646     2438     30.8%                
  bisect       2   131072     5655     7360     9065     2411     32.8%                
  bisect       3   131072     5580     7356     9132     2511     34.1%                
  bisect    test bandwidth low   5580 MB/s for set 1 location 001.00.00 32 nodes: nid[000033-000064]
  dgnettest has FAILED
\f[R]
.fi
.RE
.IP \[bu] 2
Due to the nature of the tests, the all2all test for dgnettest must have
at least 4 nodes present per set to get results back and the bisection
test must have at least 2 nodes present.
If a smaller test set is run with this, you will see an output informing
you of too few nodes.
Due to the different node limits, you can end up with the bisectional
tests running, but the all2all not.
.RS 2
.IP
.nf
\f[C]
  Running switch tests over : nid[000001-000004]
  Using NIC 0
  nprocs=32 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072                          Not enough nodes
  all2all      2   131072                          Not enough nodes
  all2all      3   131072                          Not enough nodes
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    19374    19621    19868      349      1.8%                 
  bisect       2   131072    19409    19639    19869      326      1.7%                 
  bisect       3   131072    19409    19651    19894      343      1.7%                 
  dgnettest has PASSED
\f[R]
.fi
.RE
.SH EXAMPLES
.IP \[bu] 2
By default, dgnettest is run with the default MPI selection set in SLURM
on the system.
Sometimes, this will fail with the following error:
.RS 2
.IP
.nf
\f[C]
  aborting job:
  Fatal error in PMPI_Init: Other MPI error, error stack:
  MPIR_Init_thread(632):
  MPID_Init(286).......:  PMI2 init failed: 1
  MPICH ERROR [Rank 0] [job id unknown] [Wed Aug 26 14:01:10 2020] [unknown] [nid000009] - Abort(590863) (rank 0 in comm 0): Fatal error in PMPI_Init: Other MPI error, error stack:
  MPIR_Init_thread(632):
  MPID_Init(286).......:  PMI2 init failed: 1
\f[R]
.fi
.RE
.PP
To get past this issue, you will need to first query the system to find
out what supported versions of MPI are on the system.
$ srun \[en]mpi=list
.PP
Typical options that are supported by dgnettest are pmi2 and
cray_shasta.
Try running with \[en]mpi= to get past this issue.
.IP \[bu] 2
By default, dgnettest and dgnettest_run.sh run with an assumption that
the network class of the system is a class 2.
The supported network class types for dgnettest are 0-4.
If you try to run dgnettest on a different network class type, you will
get an error about failing to parse the MAC address and the program may
hang on you.
.RS 2
.IP
.nf
\f[C]
  dgnettest_run.sh -n nid[000005-000009]
  Running loopback tests over : nid[000005-000009]
  dgnettest: failed to parse MAC addr for Shasta node nid000006 02:00:00:00:00:3e
  dgnettest: failed to parse MAC addr for Shasta node nid000009 02:00:00:00:00:2c
  dgnettest: failed to parse MAC addr for Shasta node nid000005 02:00:00:00:00:3f
\f[R]
.fi
.RE
.PP
Running with the correct class type should fix the failed parsing.
If you still get errors due to MAC address parsing issues, then there
may be something wrong with the system; either a cabling issue or
incorrect MAC address assignment on the system.
If you would like to attempt to still run knowing these issues, there is
the ignore option (-i) which will try to continue running dgnettest
despite the warnings, but this is not guaranteed to run without issue if
used.
You will get warning messages about trying to guess the information from
the MAC addresses that failed to parse.
.IP
.nf
\f[C]
    $ dgnettest_run.sh -n nid[000005-000009] -i
    Running loopback tests over : nid[000005-000009]
    dgnettest: failed to parse MAC addr for node nid000005 02:00:00:00:00:3f
    dgnettest: failed to parse MAC addr for node nid000009 02:00:00:00:00:2c
    Using NIC 0
    Guessing location based on hostname; this is less accurate for testing.
    dgnettest: failed to parse MAC addr for node nid000006 02:00:00:00:00:3e
    Guessing location based on hostname; this is less accurate for testing.
    Guessing location based on hostname; this is less accurate for testing.
    nprocs=40 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    loopback     1   131072     9516     9701     9851      155      1.6%                 
    loopback     2   131072     9608     9840    10262      265      2.7%                 
    loopback     3   131072     9666     9882    10270      237      2.4%                 
    Final loopback bandwidth stats
    loopback     3   131072     9608     9861    10270      238      2.4%                 
    dgnettest has PASSED

    unning group tests over : nid[000005-000009]
    dgnettest: failed to parse MAC addr for node nid000009 02:00:00:00:00:2c
    dgnettest: failed to parse MAC addr for node nid000006 02:00:00:00:00:3e
    Guessing location based on hostname; this is less accurate for testing.
    dgnettest: failed to parse MAC addr for node nid000005 02:00:00:00:00:3f
    Guessing location based on hostname; this is less accurate for testing.
    Using NIC 0
    Guessing location based on hostname; this is less accurate for testing.
    nprocs=40 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    all2all      1   131072     6928     6928     6928        0      0.0%                 
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    bisect       1   131072    16383    16383    16383        0      0.0%                 
    bisect       2   131072    16384    16384    16384        0      0.0%                 
    bisect       3   131072    16384    16384    16384        0      0.0%                 
    dgnettest has PASSED

    Running switch tests over : nid[000005-000009]
    dgnettest: failed to parse MAC addr for node nid000005 02:00:00:00:00:3f
    dgnettest: failed to parse MAC addr for node nid000009 02:00:00:00:00:2c
    Using NIC 0
    Guessing location based on hostname; this is less accurate for testing.
    dgnettest: failed to parse MAC addr for node nid000006 02:00:00:00:00:3e
    Guessing location based on hostname; this is less accurate for testing.
    Guessing location based on hostname; this is less accurate for testing.
    nprocs=40 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    all2all      1   131072     5408     5408     5408        0      0.0%                 
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    bisect       1   131072    16430    16430    16430        0      0.0%                 
    bisect       2   131072    16423    16423    16423        0      0.0%                 
    bisect       3   131072    16422    16422    16422        0      0.0%                 
    dgnettest has PASSED
\f[R]
.fi
.PP
The network class type also checks if there are too many nodes selected
for a run for a particular class type.
.IP
.nf
\f[C]
    $ dgnettest_run.sh -n nid[001000-001009,001083-001146,001188-001219,001278-001279,001284-001347,001432-001499,001501-001506,001510-001511] -c 0
    Running loopback tests on NIC 0 over : nid[001000-001009,001083-001146,001188-001219,001278-001279,001284-001347,001432-001499,001501-001506,001510-001511]
    Too many nodes selected for network class type 0, please check configuration
    Too many nodes selected for network class type 0, please check configuration
    ...
\f[R]
.fi
.PP
This check can also be skipped with the -i, but the data returned by the
test is not guaranteed when this option is used.
.IP \[bu] 2
To run dgnettest via SLURM on any nodes, a copy of the test will need to
be present on that node.
For Shasta systems, dgnettest is only installed on the UAN.
To run dgnettest_run from the UAN or on a system where dgnettest
isn\[cq]t on all the nodes, you can use the \[lq]-b\[rq] option.
This will use SLURM\[cq]s broadcast feature to create temporary copies
of dgnettest out on each node for the duration of the run.
If you get the following error:
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[000002-000028]
  Running loopback tests on NIC 0 over : nid[000002-000028]
  slurmstepd: error: couldn\[aq]t chdir to \[ga]/tmp/some_test\[aq]: No such file or directory: going to /tmp instead
  slurmstepd: error: couldn\[aq]t chdir to \[ga]/tmp/some_test\[aq]: No such file or directory: going to /tmp instead
  slurmstepd: error: couldn\[aq]t chdir to \[ga]/tmp/some_test\[aq]: No such file or directory: going to /tmp instead
  slurmstepd: error: couldn\[aq]t chdir to \[ga]/tmp/some_test\[aq]: No such file or directory: going to /tmp instead
  slurmstepd: error: execve(): /tmp/./dgnettest: No such file or directory
  slurmstepd: error: execve(): /tmp/./dgnettest: No such file or directory
  slurmstepd: error: execve(): /tmp/./dgnettest: No such file or directory
  slurmstepd: error: execve(): /tmp/./dgnettest: No such file or directory
  ...
\f[R]
.fi
.RE
.PP
Run with the -b option and the test will get past this step.
Depending on the directory location you are using and permissions, you
may get an error \[lq]slurmstepd: error: couldn\[cq]t chdir to
\[ga]/tmp/some_test\[cq]: No such file or directory: going to /tmp
instead\[rq] but the code will still run, this is not indicative of a
system issue.
.IP
.nf
\f[C]
    $ dgnettest_run.sh -n nid[000002-000028] -b
    Running loopback tests on NIC 0 over : nid[000002-000028]
    Using NIC 0
    nprocs=216 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    loopback     1   131072    10438    10540    10666       53      0.5%                 
    loopback     2   131072    10493    10649    10821       64      0.6%                 
    loopback     3   131072    10497    10649    10818       64      0.6%                 
    Final loopback bandwidth stats
    loopback     3   131072    10493    10649    10821       63      0.6%                 
    Per node bandwidth stats
    nid000002    3   131072    10571    10571    10571        0      0.0%                 
    nid000003    3   131072    10596    10596    10596        0      0.0%                 
    nid000004    3   131072    10660    10660    10660        0      0.0%                 
    nid000005    3   131072    10645    10645    10645        0      0.0%                 
    nid000006    3   131072    10611    10612    10612        1      0.0%                 
    nid000007    3   131072    10651    10651    10651        0      0.0%                 
    nid000008    3   131072    10618    10618    10619        1      0.0%                 
    nid000009    3   131072    10672    10672    10672        0      0.0%                 
    nid000010    3   131072    10646    10646    10646        0      0.0%                 
    nid000011    3   131072    10705    10706    10707        1      0.0%                 
    nid000012    3   131072    10649    10649    10649        0      0.0%                 
    nid000013    3   131072    10745    10747    10748        2      0.0%                 
    nid000014    3   131072    10676    10676    10676        0      0.0%                 
    nid000015    3   131072    10698    10700    10702        2      0.0%                 
    nid000016    3   131072    10667    10667    10667        0      0.0%                 
    nid000017    3   131072    10715    10716    10717        1      0.0%                 
    nid000018    3   131072    10595    10595    10596        1      0.0%                 
    nid000019    3   131072    10683    10684    10684        0      0.0%                 
    nid000020    3   131072    10647    10647    10648        0      0.0%                 
    nid000021    3   131072    10526    10526    10526        0      0.0%                 
    nid000022    3   131072    10645    10645    10645        0      0.0%                 
    nid000023    3   131072    10818    10819    10821        2      0.0%                 
    nid000024    3   131072    10647    10647    10647        0      0.0%                 
    nid000025    3   131072    10666    10666    10667        1      0.0%                 
    nid000026    3   131072    10609    10611    10612        2      0.0%                 
    nid000027    3   131072    10493    10495    10497        2      0.0%                 
    nid000028    3   131072    10653    10653    10653        0      0.0%                 
    dgnettest has PASSED

    Running loopback tests on NIC 1 over : nid[000002-000028]
    Using NIC 1
    nprocs=216 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    loopback     1   131072     6083     6270     7867      346      5.5%                 
    loopback     2   131072     6149     6298     8121      382      6.1%                 
    loopback     3   131072     6131     6312     8031      369      5.8%                 
    loopback     4   131072     6143     6324     7964      377      6.0%                 
    loopback     5   131072     6127     6310     7993      357      5.7%                 
    Final loopback bandwidth stats
    loopback     5   131072     6127     6311     8121      366      5.8%                 
    Per node bandwidth stats
    nid000002    5   131072     6174     6183     6192        9      0.1%                 
    nid000003    5   131072     6328     6367     6442       54      0.8%                 
    nid000004    5   131072     6179     6190     6198        8      0.1%                 
    nid000005    5   131072     6189     6213     6228       18      0.3%                 
    nid000006    5   131072     6149     6180     6210       25      0.4%
    nid000007    5   131072     6550     6640     6767       95      1.4%                 
    nid000008    5   131072     6201     6208     6215        7      0.1%                 
    nid000009    5   131072     6199     6215     6224       11      0.2%                 
    nid000010    5   131072     6180     6198     6236       26      0.4%                 
    nid000011    5   131072     6565     6735     6982      182      2.7%                 
    nid000012    5   131072     6200     6240     6306       47      0.7%                 
    nid000013    5   131072     6127     6138     6150       10      0.2%                 
    nid000014    5   131072     6197     6221     6252       24      0.4%                 
    nid000015    5   131072     6166     6175     6188       10      0.2%                 
    nid000016    5   131072     6190     6210     6228       16      0.3%                 
    nid000017    5   131072     6153     6164     6187       16      0.3%                 
    nid000018    5   131072     6176     6184     6194        7      0.1%                 
    nid000019    5   131072     6148     6169     6195       20      0.3%                 
    nid000020    5   131072     6244     6268     6297       28      0.4%                 
    nid000021    5   131072     6149     6180     6210       25      0.4%                 
    nid000022    5   131072     6219     6258     6309       46      0.7%                 
    nid000023    5   131072     6150     6163     6171       10      0.2%                 
    nid000024    5   131072     6164     6188     6231       31      0.5%                 
    nid000025    5   131072     6162     6170     6182        9      0.1%                 
    nid000026    5   131072     6197     6211     6230       15      0.2%                 
    nid000027    5   131072     6188     6224     6259       29      0.5%                 
    nid000028    5   131072     6203     6259     6347       62      1.0%                 
    dgnettest has PASSED

    Running switch tests on NIC 0 over : nid[000002-000028]
    Using NIC 0
    nprocs=216 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    all2all      1   131072    11962    12021    12080       83      0.7%                 
    all2all      2   131072    14476    14580    14685      148      1.0%                 
    all2all      3   131072    11880    12138    12396      364      3.0%                 
    all2all      4   131072    10841    11700    12559     1215     10.4%                 
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    bisect       1   131072    17645    17880    18115      332      1.9%                 
    bisect       2   131072    17652    17889    18126      335      1.9%                 
    bisect       3   131072    17656    17892    18129      334      1.9%                 
    dgnettest has PASSED

    Running switch tests on NIC 1 over : nid[000002-000028]
    Using NIC 1
    nprocs=216 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                                 
    all2all      1   131072    11962    12021    12080       83      0.7%                 
    all2all      2   131072    14476    14580    14685      148      1.0%                 
    all2all      3   131072    11880    12138    12396      364      3.0%                 
    all2all      4   131072    10841    11700    12559     1215     10.4%                 
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    bisect       1   131072    17645    17880    18115      332      1.9%                 
    bisect       2   131072    17652    17889    18126      335      1.9%                 
    bisect       3   131072    17656    17892    18129      334      1.9%                 
    dgnettest has PASSED

    Running group tests on NIC 0 over : nid[000002-000028]
    Using NIC 0
    nprocs=216 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    all2all      1   131072    12314    12314    12314        0      0.0%                 
    all2all      2   131072    12266    12266    12266        0      0.0%                 
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    bisect       1   131072    17461    17461    17461        0      0.0%                 
    bisect       2   131072    17448    17448    17448        0      0.0%                 
    bisect       3   131072    17459    17459    17459        0      0.0%                 
    DgNetTest has PASSED

    Running group tests on NIC 1 over : nid[000002-000028]
    Using NIC 1
    nprocs=216 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    all2all      1   131072     6512     6512     6512        0      0.0%                 
    all2all      2   131072     6621     6621     6621        0      0.0%                 
    Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
    bisect       1   131072    13896    13896    13896        0      0.0%                 
    bisect       2   131072    13019    13019    13019        0      0.0%                 
    bisect       3   131072    13891    13891    13891        0      0.0%                 
    bisect       4   131072    13904    13904    13904        0      0.0%                 
    DgNetTest has PASSED
\f[R]
.fi
.IP \[bu] 2
A typical dgnettest run using dgnettest_run.sh on a dual-NIC system
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[000013-000028]
  Running loopback tests on NIC 0 over : nid[000013-000028]
  Using NIC 0
  nprocs=128 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072    10307    10503    10664       94      0.9%                 
  loopback     2   131072    10497    10654    10777       83      0.8%                 
  loopback     3   131072    10497    10655    10778       83      0.8%                 
  Final loopback bandwidth stats
  loopback     3   131072    10497    10655    10778       82      0.8%                 
  Per node bandwidth stats
  nid000013    3   131072    10733    10733    10734        1      0.0%                 
  nid000014    3   131072    10671    10671    10672        1      0.0%                 
  nid000015    3   131072    10688    10688    10689        1      0.0%                 
  nid000016    3   131072    10777    10777    10778        0      0.0%                 
  nid000017    3   131072    10757    10757    10758        0      0.0%                 
  nid000018    3   131072    10592    10593    10593        1      0.0%                 
  nid000019    3   131072    10633    10634    10634        1      0.0%                 
  nid000020    3   131072    10643    10644    10644        0      0.0%                 
  nid000021    3   131072    10638    10638    10638        0      0.0%                 
  nid000022    3   131072    10703    10706    10709        4      0.0%                 
  nid000023    3   131072    10756    10757    10757        0      0.0%                 
  nid000024    3   131072    10613    10614    10615        1      0.0%                 
  nid000025    3   131072    10612    10613    10613        0      0.0%                 
  nid000026    3   131072    10498    10498    10498        0      0.0%                 
  nid000027    3   131072    10654    10654    10655        0      0.0%                 
  nid000028    3   131072    10497    10497    10497        1      0.0%                 
  dgnettest has PASSED

  Running loopback tests on NIC 1 over : nid[000013-000028]
  Using NIC 1
  nprocs=128 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072     6065     6196     6883      189      3.0%                 
  loopback     2   131072     6141     6235     7013      211      3.4%                 
  loopback     3   131072     6134     6232     6842      169      2.7%                 
  loopback     4   131072     6144     6265     7158      248      4.0%                 
  loopback     5   131072     6144     6258     7322      285      4.6%                 
  Final loopback bandwidth stats
  loopback     5   131072     6134     6248     7322      227      3.6%                 
  Per node bandwidth stats
  nid000013    5   131072     6147     6167     6192       21      0.3%                 
  nid000014    5   131072     6164     6178     6195       15      0.2%                 
  nid000015    5   131072     6143     6154     6173       14      0.2%                 
  nid000016    5   131072     6161     6185     6204       21      0.3%                 
  nid000017    5   131072     6134     6161     6202       31      0.5%                 
  nid000018    5   131072     6185     6190     6193        4      0.1%                 
  nid000019    5   131072     6144     6150     6155        4      0.1%                 
  nid000020    5   131072     6165     6173     6180        7      0.1%                 
  nid000021    5   131072     6174     6178     6182        4      0.1%                 
  nid000022    5   131072     6166     6186     6237       34      0.6%                 
  nid000023    5   131072     6220     6286     6396       77      1.2%                 
  nid000024    5   131072     6842     6984     7022       76      1.2% 
  nid000025    5   131072     6167     6215     6315       69      1.1%                 
  nid000026    5   131072     6192     6193     6197        2      0.0%                 
  nid000027    5   131072     6165     6179     6202       17      0.3%                 
  nid000028    5   131072     6242     6281     6313       30      0.5%                 
  dgnettest has PASSED

  Running switch tests on NIC 0 over : nid[000013-000028]
  Using NIC 0
  nprocs=128 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072     8718     9805    10892     1537     15.7%                 
  all2all      2   131072    10987    11747    12507     1075      9.2%                 
  all2all      3   131072    10652    11217    11782      799      7.1%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    18117    18144    18170       38      0.2%                 
  bisect       2   131072    18146    18177    18207       42      0.2%                 
  bisect       3   131072    18152    18182    18212       42      0.2%                 
  dgnettest has PASSED

  Running switch tests on NIC 1 over : nid[000013-000028]
  Using NIC 1
  nprocs=128 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072     5514     5762     6010      351      6.1%                 
  all2all      2   131072     4857     5128     5398      382      7.5%                 
  all2all      3   131072     6189     6437     6685      351      5.4%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072     6184     6188     6192        6      0.1%                 
  bisect       2   131072     5981     6030     6080       70      1.2%                 
  bisect       3   131072     5769     5843     5917      104      1.8%                 
  bisect       4   131072     5949     6026     6103      109      1.8%                 
  bisect       5   131072     6033     6111     6190      111      1.8%                 
  dgnettest has PASSED

  Running group tests on NIC 0 over : nid[000013-000028]
  Using NIC 0
  nprocs=128 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072    14073    14073    14073        0      0.0%                 
  all2all      2   131072    12926    12926    12926        0      0.0%                 
  all2all      3   131072    12558    12558    12558        0      0.0%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    18087    18087    18087        0      0.0%                 
  bisect       2   131072    18197    18197    18197        0      0.0%                 
  bisect       3   131072    18202    18202    18202        0      0.0%                 
  dgnettest has PASSED

  Running group tests on NIC 1 over : nid[000013-000028]
  Using NIC 1
  nprocs=128 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072    11920    11920    11920        0      0.0%                 
  all2all      2   131072    10832    10832    10832        0      0.0%                 
  all2all      3   131072     9820     9820     9820        0      0.0%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    12284    12284    12284        0      0.0%                 
  bisect       2   131072     6005     6005     6005        0      0.0%                 
  bisect       3   131072     5979     5979     5979        0      0.0%                 
  bisect       4   131072     5640     5640     5640        0      0.0%                 
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
You can run dgnettest with a single or custom list of tests via
dgnettest_run.
You will need to provide both a list of the tests to run as well as set
the set-size with -s.
If you don\[cq]t set the set-size, dgnettest_run.sh will ignore any
provided list of tests.
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[000022-000028] -s 16 latency bisect
  Running tests over : nid[000022-000028]
  nprocs=56 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test       Count    Min   Mean    Max    Dev     CV
  latency       25   1.86   1.88   1.90   0.01    0.7%
  Test      Iter    Bytes  Set      Base  Ranks   Reps     Secs  BW/proc  BW/node                  
  bisect       1   131072    1 000.01.00     32   2791  0.00287  1391.85 11134.77                  
  bisect       1   131072    3 000.03.00     24   2791  0.00155  1936.26 15490.05                  
  bisect       2   131072    1 000.01.00     32   3682  0.00289  1383.68 11069.44                  
  bisect       2   131072    3 000.03.00     24   3682  0.00155  1929.98 15439.84                  
  bisect       3   131072    1 000.01.00     32   2064  0.00418   958.00  7664.01                  
  bisect       3   131072    3 000.03.00     24   2064  0.00155  1933.02 15464.16                  
  bisect       4   131072    1 000.01.00     32   2066  0.00337  1185.33  9482.63                  
  bisect       4   131072    3 000.03.00     24   2066  0.00155  1933.75 15470.04                  
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
Using the -N option allows for selective test running across the
selected NIC.
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[001010-001043,001048-001055] -N 0
  Running loopback tests over : nid[001010-001043,001048-001055]
  nprocs=336 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072    10313    10582    10776       92      0.9%                 
  loopback     2   131072    10342    10600    10773       85      0.8%                 
  loopback     3   131072    10345    10600    10774       85      0.8%                 
  Final loopback bandwidth stats
  loopback     3   131072    10342    10600    10774       85      0.8%                 
  dgnettest has PASSED

  Running group tests over : nid[001010-001043,001048-001055]
  nprocs=336 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072     6447     6447     6447        0      0.0%                 
  all2all      2   131072     7131     7131     7131        0      0.0%                 
  all2all      3   131072     6077     6077     6077        0      0.0%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    17645    17645    17645        0      0.0%                 
  bisect       2   131072    17659    17659    17659        0      0.0%                 
  bisect       3   131072    17680    17680    17680        0      0.0%                 
  dgnettest has PASSED

  Running switch tests over : nid[001010-001043,001048-001055]
  nprocs=336 sets=4 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072     7677     9743    10838     1408     14.5%                 
  all2all      2   131072    11262    11935    12450      521      4.4%                 
  all2all      3   131072    10411    11370    11992      675      5.9%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    17305    17354    17379       33      0.2%                 
  bisect       2   131072    17352    17363    17373        8      0.0%                 
  bisect       3   131072    17341    17360    17378       15      0.1%                 
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
To run the test concurrently across all available NICs, use the -C
option.
This will still run the loopback test as a single NIC test for each NIC.
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[001128-001163] -C
  Running loopback tests on NIC 0 over : nid[001128-001163]
  nprocs=288 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072    11112    11184    11258       35      0.3%                 
  loopback     2   131072    11181    11239    11286       27      0.2%                 
  loopback     3   131072    11181    11240    11286       27      0.2%                 
  Final loopback bandwidth stats
  loopback     3   131072    11181    11240    11286       27      0.2%                 
  Per node bandwidth stats
  nid001128    3   131072    11232    11233    11234        1      0.0%                 
  nid001129    3   131072    11259    11259    11260        1      0.0%                 
  nid001130    3   131072    11195    11196    11197        1      0.0%                 
  nid001131    3   131072    11269    11269    11270        1      0.0%                 
  nid001132    3   131072    11181    11181    11181        0      0.0%                 
  nid001133    3   131072    11223    11223    11223        0      0.0%                 
  nid001134    3   131072    11199    11199    11199        0      0.0%                 
  nid001135    3   131072    11257    11258    11258        1      0.0%                 
  nid001136    3   131072    11232    11233    11234        1      0.0%                 
  nid001137    3   131072    11237    11237    11238        1      0.0%                 
  nid001138    3   131072    11268    11268    11269        0      0.0%                 
  nid001139    3   131072    11285    11285    11286        0      0.0%                 
  nid001140    3   131072    11210    11211    11211        0      0.0%                 
  nid001141    3   131072    11276    11276    11276        0      0.0%                 
  nid001142    3   131072    11253    11256    11258        3      0.0%                 
  nid001143    3   131072    11285    11285    11286        1      0.0%                 
  nid001144    3   131072    11263    11264    11265        1      0.0%                 
  nid001145    3   131072    11260    11262    11264        3      0.0%                 
  nid001146    3   131072    11253    11256    11258        3      0.0%                 
  nid001147    3   131072    11246    11247    11247        1      0.0%                 
  nid001148    3   131072    11243    11244    11244        1      0.0%                 
  nid001149    3   131072    11259    11259    11259        0      0.0%                 
  nid001150    3   131072    11274    11276    11277        2      0.0%                 
  nid001151    3   131072    11269    11269    11270        0      0.0%                 
  nid001152    3   131072    11212    11212    11212        0      0.0%                 
  nid001153    3   131072    11193    11193    11194        1      0.0%                 
  nid001154    3   131072    11245    11246    11246        1      0.0%                 
  nid001155    3   131072    11208    11208    11208        1      0.0%                 
  nid001156    3   131072    11214    11215    11215        0      0.0%                 
  nid001157    3   131072    11220    11222    11224        3      0.0%                 
  nid001158    3   131072    11228    11230    11232        3      0.0%                 
  nid001159    3   131072    11252    11252    11252        0      0.0%                 
  nid001160    3   131072    11225    11225    11226        0      0.0%                 
  nid001161    3   131072    11221    11221    11221        1      0.0%                 
  nid001162    3   131072    11226    11227    11227        1      0.0%                 
  nid001163    3   131072    11230    11230    11230        0      0.0%                 
  dgnettest has PASSED

  Running loopback tests on NIC 1 over : nid[001128-001163]
  nprocs=288 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072     6157     6695     8457      649      9.7%                 
  loopback     2   131072     6018     6266     8037      434      6.9%                 
  loopback     3   131072     6026     6264     8051      444      7.1%                 
  loopback     4   131072     6006     6266     8011      441      7.0%                 
  Final loopback bandwidth stats
  loopback     4   131072     6006     6265     8051      436      7.0%                 
  Per node bandwidth stats
  nid001128    4   131072     6265     6294     6341       42      0.7%                 
  nid001129    4   131072     6152     6175     6209       30      0.5%                 
  nid001130    4   131072     6029     6098     6161       66      1.1%                 
  nid001131    4   131072     6186     6188     6189        2      0.0%                 
  nid001132    4   131072     6105     6188     6251       75      1.2%                 
  nid001133    4   131072     6185     6207     6228       22      0.4%                 
  nid001134    4   131072     6037     6041     6044        4      0.1%                 
  nid001135    4   131072     6161     6213     6250       46      0.7%                 
  nid001136    4   131072     6006     6026     6036       17      0.3%                 
  nid001137    4   131072     6128     6139     6157       15      0.3%                 
  nid001138    4   131072     6018     6197     6318      158      2.6%                 
  nid001139    4   131072     6124     6405     6571      245      3.8%                 
  nid001140    4   131072     6013     6039     6052       22      0.4%                 
  nid001141    4   131072     6138     6166     6210       38      0.6%                 
  nid001142    4   131072     6028     6033     6040        6      0.1%                 
  nid001143    4   131072     6146     6378     6526      203      3.2%                 
  nid001144    4   131072     6042     6045     6048        3      0.1%                 
  nid001145    4   131072     6249     6274     6315       37      0.6%                 
  nid001146    4   131072     8011     8033     8051       20      0.3%   
  nid001147    4   131072     6146     6151     6156        5      0.1%                 
  nid001148    4   131072     6024     6129     6183       91      1.5%                 
  nid001149    4   131072     6122     6128     6135        7      0.1%                 
  nid001150    4   131072     6027     6086     6127       53      0.9%                 
  nid001151    4   131072     6136     6138     6142        3      0.1%                 
  nid001152    4   131072     6026     6031     6038        6      0.1%                 
  nid001153    4   131072     7274     7340     7393       60      0.8%   
  nid001154    4   131072     7481     7513     7559       41      0.5%   
  nid001155    4   131072     6163     6173     6181        9      0.1%                 
  nid001156    4   131072     6037     6042     6048        6      0.1%                 
  nid001157    4   131072     6153     6157     6164        7      0.1%                 
  nid001158    4   131072     6045     6047     6048        1      0.0%                 
  nid001159    4   131072     6142     6152     6158        9      0.1%                 
  nid001160    4   131072     6025     6042     6056       16      0.3%                 
  nid001161    4   131072     6176     6208     6227       28      0.4%                 
  nid001162    4   131072     6013     6035     6066       28      0.5%                 
  nid001163    4   131072     6019     6041     6058       20      0.3%                 
  dgnettest has PASSED

  Running group tests over : nid[001128-001163]
  nprocs=288 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072     9594     9594     9594        0      0.0%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    37902    37902    37902        0      0.0%                 
  bisect       2   131072    40094    40094    40094        0      0.0%                 
  bisect       3   131072    40099    40099    40099        0      0.0%                 
  dgnettest has PASSED

  Running switch tests over : nid[001128-001163]
  nprocs=288 sets=4 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072    36344    36443    36542      140      0.4%                 
  all2all      2   131072    19979    20779    21580     1132      5.4%                 
  all2all      3   131072    21386    21925    22464      762      3.5%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    33610    35609    37498     1900      5.3%                 
  bisect       2   131072    33786    38274    42493     4812     12.6%                 
  bisect       3   131072    33789    38269    42517     4831     12.6%                 
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
Typically, the multi-NIC mapping is done automatically, with the NICs
divided and mapped evenly across the NUMA nodes.
If you wish to run with a custom mapping of threads to NICs, you will
have to set this in the environment variables for MPI and then pass in
this mapping to dgnettest.
.IP \[bu] 2
This first step is needed if you are running dgnettest, you can skip
this step if using dgnettest_run.sh as it will do this for you.
For dgnettest, you will need to set the MPICH environment variables to
run in user mode and then enter a mapping of
\[lq]\f[I][NIC]\f[R],\f[I][RANKS]\f[R];\f[I][NIC]\f[R],\f[I][RANKS]\f[R].
For this example we will use 2 NICs and set the mapping so NIC 0 is
mapped to the even ranks (PPN(# ranks) of 8) and NIC 1 is set to the odd
ranks -\[rq]0:0,2,4,6;1:1,3,5,7\[rq].
.RS 2
.IP
.nf
\f[C]
      $ export MPICH_OFI_NUM_NICS=2
      $ export MPICH_OFI_NIC_POLICY=\[dq]USER\[dq]
      $ export MPICH_OFI_NIC_MAPPING=\[dq]0:0,2,4,6;1:1,3,5,7\[dq]
\f[R]
.fi
.RE
.IP \[bu] 2
Next, launch dgnettest with -N \f[I]mapping\f[R] or dgnettest_run.sh -C
\f[I]mapping\f[R] to run with the custom mapping.
Note - results are not guaranteed to be valid if using a custom mapping,
so validate any errors with a re-run of dgnettest with default settings.
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[000022-000028] -C \[dq]0:0,2,4,6;1:1,3,5,7\[dq]
  Running loopback tests on NIC 0 over : nid[000022-000028]
  Using NIC 0
  nprocs=56 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072     3616     3636     3655       12      0.3%                 
  loopback     2   131072     3644     3650     3655        4      0.1%                 
  loopback     3   131072     3644     3650     3656        5      0.1%                 
  Final loopback bandwidth stats
  loopback     3   131072     3644     3650     3656        4      0.1%                 
  Per node bandwidth stats
  nid000022    3   131072     3645     3646     3646        0      0.0%                 
  nid000023    3   131072     3651     3652     3652        1      0.0%                 
  nid000024    3   131072     3650     3650     3650        0      0.0%                 
  nid000025    3   131072     3655     3656     3656        0      0.0%                 
  nid000026    3   131072     3644     3644     3644        0      0.0%                 
  nid000027    3   131072     3655     3655     3655        0      0.0%                 
  nid000028    3   131072     3647     3647     3647        0      0.0%                 
  dgnettest has PASSED

  Running loopback tests on NIC 1 over : nid[000022-000028]
  Using NIC 1
  nprocs=56 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072     4082     5471     8073     1735     31.7%                 
  loopback     2   131072     4181     6877     8943     2037     29.6%                 
  loopback     3   131072     4180     7597     8934     1659     21.8%                 
  Final loopback bandwidth stats
  loopback     3   131072     4180     7237     8943     1824     25.2%                 
  Per node bandwidth stats
  nid000022    3   131072     8282     8358     8433      107      1.3%   result is high
  nid000023    3   131072     4186     6132     8077     2751     44.9%    result is low
  nid000024    3   131072     4180     4181     4181        0      0.0%    result is low
  nid000025    3   131072     6814     7147     7479      470      6.6%                 
  nid000026    3   131072     6308     7571     8835     1787     23.6%                 
  nid000027    3   131072     8934     8939     8943        6      0.1%   result is high
  nid000028    3   131072     8058     8335     8611      391      4.7%   result is high
  dgnettest has FAILED
  srun: error: nid000022: task 0: Exited with exit code 1

  Running group tests over : nid[000022-000028]
  Using all NICs
  nprocs=56 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072    13432    13432    13432        0      0.0%                 
  all2all      2   131072    16304    16304    16304        0      0.0%                 
  all2all      3   131072    16969    16969    16969        0      0.0%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    14623    14623    14623        0      0.0%                 
  bisect       2   131072     8683     8683     8683        0      0.0%                 
  bisect       3   131072    14009    14009    14009        0      0.0%                 
  dgnettest has PASSED

  Running switch tests over : nid[000022-000028]
  Using all NICs
  nprocs=56 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072    14024    14024    14024        0      0.0%                 
  all2all      2   131072    25106    25106    25106        0      0.0%                 
  all2all      3   131072    18942    18942    18942        0      0.0%                 
  all2all      4   131072    19366    19366    19366        0      0.0%                 
  all2all   test bandwidth low  11055 MB/s for set 0 location 000.03.00 3 nodes: nid[000022,000025-000026]
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072     8127    10795    13462     3772     34.9%                 
  bisect       2   131072     8114     8263     8411      210      2.5%                 
  bisect       3   131072     8084     9114    10144     1456     16.0%                 
  bisect    test bandwidth low   8084 MB/s for set 0 location 000.03.00 3 nodes: nid[000022,000025-000026]
  dgnettest has FAILED
  srun: error: nid000022: task 0: Exited with exit code 1
\f[R]
.fi
.RE
.IP \[bu] 2
The default test suite runs in around 10 minutes using 462 of 512 nodes
(dual injection system) with each individual test taking about 30
seconds each to run.
Use the -t option to run each individual test for longer.
You can also set the set size and specify a test to run.
The current options are latency, loopback, bisect, and all2all.
.RS 2
.IP
.nf
\f[C]
  $ dgnettest_run.sh -n nid[000022-000028] -t 300 -s 16 bisect
  Running tests over : nid[000022-000028]
  nprocs=56 sets=2 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes  Set      Base  Ranks   Reps     Secs  BW/proc  BW/node                  
  bisect       1   131072    3 000.03.00     24   2690  0.00155  1932.31 15458.46                  
  bisect       1   131072    1 000.01.00     32   2690  0.00286  1399.44 11195.53                  
  bisect       2   131072    3 000.03.00     24   2053  0.00155  1937.85 15502.78                  
  bisect       2   131072    1 000.01.00     32   2053  0.00403   993.50  7947.98                  
  bisect       3   131072    3 000.03.00     24   2051  0.00155  1939.47 15515.75                  
  bisect       3   131072    1 000.01.00     32   2051  0.00368  1088.14  8705.14                  
  bisect       4   131072    3 000.03.00     24   2061  0.00155  1934.79 15478.32                  
  bisect       4   131072    1 000.01.00     32   2061  0.00420   951.51  7612.08                  
  bisect       5   131072    3 000.03.00     24   2049  0.00155  1936.42 15491.33                  
  bisect       5   131072    1 000.01.00     32   2049  0.00397  1008.04  8064.28                  
  bisect       6   131072    3 000.03.00     24   2070  0.00155  1939.07 15512.59                  
  bisect       6   131072    1 000.01.00     32   2070  0.00410   975.57  7804.54                  
  bisect       7   131072    3 000.03.00     24   2065  0.00155  1937.15 15497.16                  
  bisect       7   131072    1 000.01.00     32   2065  0.00474   844.66  6757.28                  
  bisect       8   131072    3 000.03.00     24   2061  0.00155  1935.64 15485.14                  
  bisect       8   131072    1 000.01.00     32   2061  0.00298  1343.67 10749.39                  
  bisect       9   131072    3 000.03.00     24   2081  0.00155  1936.85 15494.81                  
  bisect       9   131072    1 000.01.00     32   2081  0.00426   939.30  7514.44                  
  bisect      10   131072    3 000.03.00     24   2050  0.00155  1940.47 15523.73                  
  bisect      10   131072    1 000.01.00     32   2050  0.00375  1067.93  8543.44                  
  bisect      11   131072    3 000.03.00     24   2053  0.00155  1939.61 15516.90                  
  bisect      11   131072    1 000.01.00     32   2053  0.00384  1042.77  8342.14                  
  bisect      12   131072    3 000.03.00     24   2048  0.00155  1935.84 15486.71                  
  bisect      12   131072    1 000.01.00     32   2048  0.00376  1063.53  8508.25                  
  bisect      13   131072    3 000.03.00     24   2059  0.00155  1933.02 15464.14                  
  bisect      13   131072    1 000.01.00     32   2059  0.00522   765.56  6124.46                  
  bisect      14   131072    3 000.03.00     24   2065  0.00155  1938.09 15504.71                  
  bisect      14   131072    1 000.01.00     32   2065  0.00535   747.55  5980.37                  
  bisect      15   131072    3 000.03.00     24   2055  0.00155  1938.89 15511.13                  
  bisect      15   131072    1 000.01.00     32   2055  0.00427   936.08  7488.67                  
  bisect      16   131072    3 000.03.00     24   2068  0.00155  1934.83 15478.65                  
  bisect      16   131072    1 000.01.00     32   2068  0.00379  1056.22  8449.75                  
  bisect      17   131072    3 000.03.00     24   2050  0.00155  1938.48 15507.83                  
  bisect      17   131072    1 000.01.00     32   2050  0.00340  1177.41  9419.30                  
  bisect      18   131072    3 000.03.00     24   2131  0.00155  1934.94 15479.52                  
  bisect      18   131072    1 000.01.00     32   2131  0.00364  1099.89  8799.11                  
  bisect      19   131072    3 000.03.00     24   2068  0.00155  1938.53 15508.26                  
  bisect      19   131072    1 000.01.00     32   2068  0.00339  1180.88  9447.00                  
  bisect      20   131072    3 000.03.00     24   2061  0.00155  1935.65 15485.16                  
  bisect      20   131072    1 000.01.00     32   2061  0.00420   951.84  7614.70                  
  bisect      21   131072    3 000.03.00     24   2053  0.00155  1936.72 15493.75                  
  bisect      21   131072    1 000.01.00     32   2053  0.00487   820.92  6567.40                  
  bisect      22   131072    3 000.03.00     24   2057  0.00155  1938.10 15504.81                  
  bisect      22   131072    1 000.01.00     32   2057  0.00302  1322.98 10583.80                  
  bisect      23   131072    3 000.03.00     24   2060  0.00155  1936.64 15493.08                  
  bisect      23   131072    1 000.01.00     32   2060  0.00338  1184.79  9478.32                  
  bisect      24   131072    3 000.03.00     24   2071  0.00154  1952.85 15622.82                  
  bisect      24   131072    1 000.01.00     32   2071  0.00320  1250.01 10000.08                  
  bisect      25   131072    3 000.03.00     24   2060  0.00155  1936.42 15491.35                  
  bisect      25   131072    1 000.01.00     32   2060  0.00411   973.68  7789.41                  
  bisect      26   131072    3 000.03.00     24   2066  0.00155  1937.59 15500.69                  
  bisect      26   131072    1 000.01.00     32   2066  0.00370  1081.56  8652.49                  
  bisect      27   131072    3 000.03.00     24   2069  0.00155  1935.31 15482.51                  
  bisect      27   131072    1 000.01.00     32   2069  0.00352  1135.10  9080.83                  
  bisect      28   131072    3 000.03.00     24   2062  0.00155  1938.19 15505.53                  
  bisect      28   131072    1 000.01.00     32   2062  0.00382  1048.33  8386.64                  
  bisect      29   131072    3 000.03.00     24   2055  0.00155  1936.48 15491.81                  
  bisect      29   131072    1 000.01.00     32   2055  0.00381  1050.72  8405.76                  
  bisect      30   131072    3 000.03.00     24   2066  0.00155  1936.89 15495.12                  
  bisect      30   131072    1 000.01.00     32   2066  0.00406   985.84  7886.70                  
  bisect      31   131072    3 000.03.00     24   2060  0.00155  1938.17 15505.38                  
  bisect      31   131072    1 000.01.00     32   2060  0.00409   978.45  7827.56                  
  bisect      32   131072    3 000.03.00     24   2074  0.00155  1937.44 15499.53                  
  bisect      32   131072    1 000.01.00     32   2074  0.00407   983.46  7867.71                  
  bisect      33   131072    3 000.03.00     24   2056  0.00155  1936.70 15493.58                  
  bisect      33   131072    1 000.01.00     32   2056  0.00423   945.79  7566.30                  
  bisect      34   131072    3 000.03.00     24   2052  0.00155  1934.83 15478.67                  
  bisect      34   131072    1 000.01.00     32   2052  0.00344  1164.23  9313.86                  
  bisect      35   131072    3 000.03.00     24   2053  0.00155  1935.19 15481.52                  
  bisect      35   131072    1 000.01.00     32   2053  0.00505   792.04  6336.30                  
  bisect      36   131072    3 000.03.00     24   2066  0.00155  1936.77 15494.14                  
  bisect      36   131072    1 000.01.00     32   2066  0.00452   885.87  7086.99                  
  bisect      37   131072    3 000.03.00     24   2064  0.00155  1935.46 15483.64                  
  bisect      37   131072    1 000.01.00     32   2064  0.00332  1205.68  9645.41                  
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
Typical output for the loopback test.
The output has been modified for the brevity of the man page.
.RS 2
.IP
.nf
\f[C]
  Running loopback tests on NIC 0 over : nid[001010-001043,001048-001055,001060-001079,001084-001163,001168-001199,001204-001219,001224-001287,001292-001359,001364-001479,001484-001499,001504-001511]
  nprocs=3696 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  loopback     1   131072    10736    10996    11283       85      0.8%                 
  loopback     2   131072    10731    11008    11278       84      0.8%                 
  loopback     3   131072    10733    11008    11278       84      0.8%                 
  Final loopback bandwidth stats
  loopback     3   131072    10731    11008    11278       84      0.8%                 
  Per node bandwidth stats
  nid001010    3   131072    11129    11130    11130        1      0.0%                 
  nid001011    3   131072    11113    11114    11115        1      0.0%                 
  nid001012    3   131072    11099    11100    11101        2      0.0%                 
  nid001013    3   131072    11128    11128    11129        1      0.0%                 
  nid001014    3   131072    10990    10990    10991        1      0.0%                 
  nid001015    3   131072    11128    11129    11130        2      0.0%                 
  nid001016    3   131072    11190    11190    11190        0      0.0%                 
  nid001017    3   131072    11047    11047    11048        1      0.0%                 
  nid001018    3   131072    11020    11020    11021        1      0.0%                 
  nid001019    3   131072    11074    11075    11075        0      0.0%                 
  nid001020    3   131072    11047    11047    11047        0      0.0%                 
  nid001021    3   131072    11095    11096    11097        1      0.0%                 
  nid001022    3   131072    11149    11149    11149        0      0.0%                 
  nid001023    3   131072    10998    10998    10998        0      0.0%                 
  nid001024    3   131072    11092    11093    11093        0      0.0%                 
  nid001025    3   131072    11020    11021    11021        0      0.0%                 
  nid001026    3   131072    11214    11214    11214        0      0.0%                 
  nid001027    3   131072    10963    10963    10963        0      0.0%                 
  nid001028    3   131072    11164    11164    11164        0      0.0%                 
  nid001029    3   131072    10972    10973    10974        1      0.0%                 
  nid001030    3   131072    11160    11161    11161        1      0.0%                 
  ...        
  nid001489    3   131072    11037    11038    11039        1      0.0%                 
  nid001490    3   131072    11003    11004    11005        1      0.0%                 
  nid001491    3   131072    11089    11090    11090        1      0.0%                 
  nid001492    3   131072    11002    11002    11003        1      0.0%                 
  nid001493    3   131072    11059    11060    11060        1      0.0%                 
  nid001494    3   131072    11076    11076    11076        0      0.0%                 
  nid001495    3   131072    11093    11094    11095        1      0.0%                 
  nid001496    3   131072    11046    11047    11048        2      0.0%                 
  nid001497    3   131072    10990    10990    10991        1      0.0%                 
  nid001498    3   131072    11076    11076    11077        0      0.0%                 
  nid001499    3   131072    11032    11033    11033        0      0.0%                 
  nid001504    3   131072    10982    10983    10984        1      0.0%                 
  nid001505    3   131072    10997    10999    11000        2      0.0%                 
  nid001506    3   131072    10977    10977    10977        1      0.0%                 
  nid001507    3   131072    10875    10876    10878        2      0.0%                 
  nid001508    3   131072    10880    10880    10880        0      0.0%                 
  nid001509    3   131072    10860    10862    10863        3      0.0%                 
  nid001510    3   131072    11062    11063    11063        1      0.0%                 
  nid001511    3   131072    11015    11016    11017        2      0.0%                 
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
Typical output for the switch test.
.RS 2
.IP
.nf
\f[C]
  Running switch tests over : nid[001128-001163]
  nprocs=288 sets=4 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072    36344    36443    36542      140      0.4%                 
  all2all      2   131072    19979    20779    21580     1132      5.4%                 
  all2all      3   131072    21386    21925    22464      762      3.5%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    33610    35609    37498     1900      5.3%                 
  bisect       2   131072    33786    38274    42493     4812     12.6%                 
  bisect       3   131072    33789    38269    42517     4831     12.6% 
  dgnettest has PASSED
\f[R]
.fi
.RE
.IP \[bu] 2
Typical output for the group test.
.RS 2
.IP
.nf
\f[C]
  Running group tests over : nid[001128-001163]
  nprocs=288 sets=1 maxbytes=131072 ppn=8 (Warning: no PMI set manually)
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  all2all      1   131072     9594     9594     9594        0      0.0%                 
  Test      Iter    Bytes      Min     Mean      Max      Dev       CV                  
  bisect       1   131072    37902    37902    37902        0      0.0%                 
  bisect       2   131072    40094    40094    40094        0      0.0%                 
  bisect       3   131072    40099    40099    40099        0      0.0%                 
  dgnettest has PASSED
\f[R]
.fi
.RE
.SH SEE ALSO
.SH AUTHORS
September 9, 2021.
