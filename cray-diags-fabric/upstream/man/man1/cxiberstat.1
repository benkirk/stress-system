.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "CXIBERSTAT" "1" "" "Cxiberstat User Manual" "Version 1.4"
.hy
.SH NAME
.PP
cxiberstat.sh - network diagnostic support script
.SH SYNOPSIS
.PP
cxiberstat.sh [-dhpsV] \f[I]nodelist\f[R]
.SH DESCRIPTION
.PP
The Cassini NIC diagnostic, cxiberstat.sh, is a script that helps with
identifying network issues with Cassini during initial setup of systems,
before the fabric or other higher level services can be installed.
The script relies on the libcxi library and Cassini drivers to run and
is intended for use by administrator, therefore requiring root
privileges.
The script can be modified by the site based on customer requirements.
.SS Tests
.PP
The cxibwcheck.sh script uses the diagnostic tools provided by the
libcxi libraries to gather the bit error rates (BER) over a duration of
time for the network devices on the selected nodes.
The test is run over all selected nodes and, if in a multi-NIC system,
will loop over all Cassini devices on the selected nodes.
The gathered Corrected Code Word BER(CCW BER) and Uncorrected Code Word
BER (UCW BER) are then compiled into a list and printed out as a
histogram to help the user identify possible problem areas.
Users can run cxiberstat.sh using Slurm or PDSH.
Using Slurm allows the user to check the BER stats only on compute
nodes, while using PDSH allows the user to verify all nodes where a
Cassini NIC is installed, including non-compute nodes.
.SH OPTIONS
.TP
-d \f[I]device\f[R]
Select a specific network device.
The default is all devices
.TP
-e \f[I]exponent\f[R]
Only used with \[lq]-f\[rq] option.
Limit output to nodes with a corrected BER above the given rate.
Output is combined with \[lq]-E\[rq] output when both are specified;
setting \[lq]-e\[rq] to 0 disables the check.
The default is 6, or 1E-6 (Ex: \[lq]-e 5\[rq] corresponds to
\[lq]Corrected BERs above 1e-05\[rq])
.TP
-E \f[I]EXP\f[R]
Only used with \[lq]-f\[rq] option.
Limit output to nodes with an uncorrected BER above the given rate.
Output is combined with \[lq]-e\[rq] output when both are specified;
setting \[lq]-E\[rq] to 0 disables the check.
The default is 0 (Ex: \[lq]-E 8\[rq] corresponds to \[lq]Uncorrected
BERS above 1e-08\[rq])
.TP
-f
The end results display only nodes with errors above a threshold set by
the \[lq]-e\[rq] and \[lq]-E\[rq] command line options.
.TP
-h
Display the help text and exit
.TP
-p
Use pdsh rather than Slurm (requires \f[I]nodelist\f[R])
.TP
-P
Give the Slurm partition to use.
The default is Slurm default.
.TP
-s
Sort the end results by UCW, CCW descending.
The default view is by Node, Device ascending
.TP
-S
Sort by UCW, CCW ascending.
The default view is by Node, Device ascending
.TP
-u
Set the rate measurement duration in seconds.
The default is 4 seconds.
.TP
-V
Displays the version number of the test.
.SH OPERANDS
.TP
\f[I]nodelist\f[R]
List of nodes on which to run, specified in pdsh format
(e.g.\ x1000c0s[0-7]b[0-1]n[0-1]).
.SH EXAMPLES
.PP
By default, cxiberstat.sh launches a run using slurm over all available
node in the default partition.
A subset of nodes can be specified on the command line, and -P can be
used to select a partition.
A typical run on a dual Cassini system looks like the following:
.IP
.nf
\f[C]
    \[ti]> ./cxiberstat.sh nid[000006-000020]
    Note: Using a duration of 4 means the minimum measurable rate is 1.176e-12
          Node  Device    CCW_BER    UCW_BER
    nid000006:    cxi0  4.354e-11       <min
    nid000006:    cxi1  1.938e-11       <min
    nid000007:    cxi0  1.765e-11       <min
    nid000007:    cxi1  1.673e-11       <min
    nid000008:    cxi0  2.648e-10       <min
    nid000008:    cxi1  2.362e-11       <min
    nid000009:    cxi0  1.059e-11       <min
    nid000009:    cxi1  7.104e-12       <min
    nid000010:    cxi0  1.177e-12       <min
    nid000010:    cxi1  1.440e-10       <min
    nid000011:    cxi0  2.353e-12       <min
    nid000011:    cxi1  1.498e-12       <min
    nid000012:    cxi0  5.884e-12       <min
    nid000012:    cxi1  4.124e-11       <min
    nid000013:    cxi0  4.707e-12       <min
    nid000013:    cxi1  1.112e-12       <min
    nid000014:    cxi0  8.237e-12       <min
    nid000014:    cxi1  3.851e-13       <min
    nid000015:    cxi0  9.412e-12       <min
    nid000015:    cxi1  4.705e-13       <min
    nid000016:    cxi0  1.730e-10       <min
    nid000016:    cxi1  3.269e-11       <min
    nid000017:    cxi0  2.942e-11       <min
    nid000017:    cxi1  8.686e-12       <min
    nid000018:    cxi0  5.060e-11       <min
    nid000018:    cxi1  1.198e-11       <min
    nid000019:    cxi0  5.294e-11       <min
    nid000019:    cxi1  1.412e-11       <min
    nid000020:    cxi0  1.412e-11       <min
    nid000020:    cxi1  1.896e-08       <min

    CCW BER Summary
      Bin   # Histogram
    1e-05:  0 
    1e-06:  0 
    1e-07:  0 
    1e-08:  0 
    1e-09:  0 
    1e-10:  3 =========
    1e-11: 14 ========================================
    1e-12: 10 =============================
     <min:  0 
    
    UCW BER Summary
    No UCW BERs above min measurable value
\f[R]
.fi
.IP \[bu] 2
Running the test with PDSH, instead of Slurm, the `-p' command line
argument along with a nodelist is needed.
The test output looks the same as the Slurm run:
.RS 2
.IP
.nf
\f[C]
  \[ti]> cxiberstat.sh -p nid[000006-000020]
  Note: Using a duration of 4 means the minimum measurable rate is 1.176e-12
        Node  Device    CCW_BER    UCW_BER
  nid000006:    cxi0  2.706e-11       <min
  nid000006:    cxi1  2.159e-11       <min
  nid000007:    cxi0  7.060e-12       <min
  nid000007:    cxi1  1.787e-11       <min
  nid000008:    cxi0  1.777e-10       <min
  nid000008:    cxi1  2.445e-11       <min
  nid000009:    cxi0  1.294e-11       <min
  nid000009:    cxi1  6.526e-12       <min
  nid000010:    cxi0  1.177e-12       <min
  nid000010:    cxi1  1.361e-10       <min
  nid000011:    cxi0       <min       <min
  nid000011:    cxi1  1.525e-12       <min
  nid000012:    cxi0  3.530e-12       <min
  nid000012:    cxi1  4.043e-11       <min
  nid000013:    cxi0  1.059e-11       <min
  nid000013:    cxi1  1.250e-12       <min
  nid000014:    cxi0  2.236e-11       <min
  nid000014:    cxi1  7.624e-13       <min
  nid000015:    cxi0  1.059e-11       <min
  nid000015:    cxi1  7.624e-13       <min
  nid000016:    cxi0  3.765e-11       <min
  nid000016:    cxi1  2.787e-11       <min
  nid000017:    cxi0  1.530e-11       <min
  nid000017:    cxi1  1.034e-11       <min
  nid000018:    cxi0  6.236e-11       <min
  nid000018:    cxi1  1.113e-11       <min
  nid000019:    cxi0  4.000e-11       <min
  nid000019:    cxi1  1.381e-11       <min
  nid000020:    cxi0  1.530e-11       <min
  nid000020:    cxi1  2.387e-08       <min

  CCW BER Summary
    Bin   # Histogram
  1e-05:  0 
  1e-06:  0 
  1e-07:  0 
  1e-08:  0 
  1e-09:  0 
  1e-10:  2 =====
  1e-11: 18 ========================================
  1e-12:  6 ==============
   <min:  1 ===

  UCW BER Summary
  No UCW BERs above min measurable value
\f[R]
.fi
.RE
.IP \[bu] 2
Using the `-f' option, the output is limited to devices with CCW BERs
above a value (default 1E-6) and UCW BERs above another value (default
0).
The CCW rates are adjustable with the `-e' command line option(CLO) and
UCWs with the `-E' CLO:
.RS 2
.IP
.nf
\f[C]
  \[ti]> cxiberstat.sh nid[000006-000020] -f -e 10
  Note: Using a duration of 4 means the minimum measurable rate is 1.176e-12
        Node  Device    CCW_BER    UCW_BER
  nid000008:    cxi0  2.259e-10       <min
  nid000010:    cxi1  1.475e-10       <min
  nid000020:    cxi1  1.733e-08       <min

  CCW BER Summary
    Bin  # Histogram
  1e-05: 0 
  1e-06: 0 
  1e-07: 0 
  1e-08: 0 
  1e-09: 0 
  1e-10: 2 =========================================
  1e-11: 0 
  1e-12: 0 
   <min: 0 

  UCW BER Summary
  No UCW BERs above min measurable value
\f[R]
.fi
.RE
.SH SEE ALSO
.SH AUTHORS
March 1, 2022.
